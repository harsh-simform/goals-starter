// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Chat {
  id         Int       @id @default(autoincrement())
  text       String
  chatRoom   ChatRoom? @relation(fields: [chatRoomId], references: [id])
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @updatedAt @db.Timestamp(6)
  Sender     User      @relation(name: "sentMessages", fields: [senderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Receiver   User      @relation(name: "receivedMessages", fields: [receiverId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  senderId   Int
  receiverId Int
  chatRoomId Int?
}

model ChatRoom {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  members   User[]
  Chat      Chat[]
}

model Groups {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  CreatedBy User     @relation(name: "creatorUser", fields: [creatorId], references: [id])
  creatorId Int
  Members   User[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id               Int       @id @default(autoincrement())
  name             String?   @db.VarChar(255)
  email            String    @unique @db.VarChar(255)
  password         String
  Post             Post[]
  Profile          Profile?
  SentMessages     Chat[]    @relation("sentMessages")
  ReceivedMessages Chat[]    @relation("receivedMessages")
  CreatedGroups    Groups[]  @relation("creatorUser")
  Groups           Groups?   @relation(fields: [groupsId], references: [id])
  groupsId         Int?
  ChatRoom         ChatRoom? @relation(fields: [chatRoomId], references: [id])
  chatRoomId       Int?
}
